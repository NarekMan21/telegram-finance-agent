#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
"""

import requests
import sys

def check_repo_exists(username, repo_name):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub"""
    url = f"https://api.github.com/repos/{username}/{repo_name}"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            print(f"‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π https://github.com/{username}/{repo_name} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            repo_data = response.json()
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {repo_data.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}")
            print(f"   –ó–≤–µ–∑–¥: {repo_data.get('stargazers_count', 0)}")
            print(f"   –§–æ—Ä–∫–æ–≤: {repo_data.get('forks_count', 0)}")
            return True
        elif response.status_code == 404:
            print(f"‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π https://github.com/{username}/{repo_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        else:
            print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {e}")
        return False

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
    print("=" * 40)
    
    username = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à GitHub username: ")
    repo_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: ")
    
    if check_repo_exists(username, repo_name):
        print("\n‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã")
        return True
    else:
        print("\n‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub:")
        print(f"   1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/new")
        print(f"   2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {repo_name}")
        print(f"   3. –í—ã–±–µ—Ä–∏—Ç–µ Public")
        print(f"   4. –ù–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å README")
        print(f"   5. –ù–∞–∂–º–∏—Ç–µ 'Create repository'")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        sys.exit(1)