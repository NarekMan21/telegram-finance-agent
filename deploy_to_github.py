#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ GitHub
"""

import os
import subprocess
import sys

def main():
    print("üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Telegram Financial Agent –Ω–∞ GitHub")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à GitHub username: ")
    repo_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, telegram-financial-agent): ")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —á–µ—Ä–µ–∑ GitHub CLI (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ GitHub CLI
        subprocess.run(["gh", "--version"], check=True, capture_output=True)
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        print(f"–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {repo_name}...")
        subprocess.run([
            "gh", "repo", "create", repo_name, 
            "--public", 
            "--description", "Telegram Financial Agent - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏–∑ Telegram",
            "--homepage", "https://github.com/{}/{}".format(username, repo_name)
        ], check=True)
        
        print("‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ÑπÔ∏è  GitHub CLI –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤—Ä—É—á–Ω—É—é –Ω–∞ GitHub:")
        print(f"   1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/new")
        print(f"   2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {repo_name}")
        print(f"   3. –í—ã–±–µ—Ä–∏—Ç–µ Public")
        print(f"   4. –ù–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å README")
        print(f"   5. –ù–∞–∂–º–∏—Ç–µ 'Create repository'")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º remote –∏ –ø—É—à–∏–º –∫–æ–¥
    try:
        print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git remote...")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ remote origin
        result = subprocess.run(["git", "remote"], capture_output=True, text=True)
        remotes = result.stdout.strip().split('\n')
        
        if 'origin' in remotes:
            # –ï—Å–ª–∏ remote origin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
            subprocess.run([
                "git", "remote", "set-url", "origin", 
                f"https://github.com/{username}/{repo_name}.git"
            ], check=True)
            print("–û–±–Ω–æ–≤–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π remote origin")
        else:
            # –ï—Å–ª–∏ remote origin –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
            subprocess.run([
                "git", "remote", "add", "origin", 
                f"https://github.com/{username}/{repo_name}.git"
            ], check=True)
            print("–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π remote origin")
    except subprocess.CalledProcessError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Git remote: {e}")
        return False
    
    print("–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–∞ –Ω–∞ GitHub...")
    try:
        # –ü—É—à–∏–º –∫–æ–¥
        subprocess.run(["git", "push", "-u", "origin", "master"], check=True)
        print("‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub!")
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–¥–∞")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:")
        print(f"   git push -u origin master")
        return False
    
    print("\nüéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üîó –í–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/{username}/{repo_name}")
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        sys.exit(1)